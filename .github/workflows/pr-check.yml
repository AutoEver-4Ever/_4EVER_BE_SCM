name: PR 체크

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - dev

jobs:
  validate:
    name: PR 유효성 검사
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Gradle 실행 권한 부여
        run: chmod +x gradlew

      - name: 단위 테스트 실행
        run: ./gradlew test --no-daemon

      - name: 빌드 검증
        run: ./gradlew build -x test --no-daemon

      - name: PR 상태 업데이트
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '✅' : '❌';
            const message = `${emoji} **PR 검증 ${status === 'success' ? '성공' : '실패'}**

            **브랜치:** \`${{ github.head_ref }}\` → \`${{ github.base_ref }}\`
            **커밋:** ${{ github.event.pull_request.head.sha }}

            ${status === 'success'
              ? '모든 검증을 통과했습니다. 리뷰를 요청해주세요.'
              : '테스트 또는 빌드가 실패했습니다. 코드를 수정해주세요.'}

            [워크플로우 로그 확인](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
