name: Slack ÏïåÎ¶º - Pull Request

on:
  pull_request:
    types: [opened, closed, reopened, ready_for_review]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: PR ÏÉÅÌÉú ÏÑ§Ï†ï
        id: pr-status
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            echo "status=Î≥ëÌï©Îê®" >> $GITHUB_OUTPUT
            echo "emoji=‚úÖ" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.action }}" == "closed" ]; then
            echo "status=Ï¢ÖÎ£åÎê®" >> $GITHUB_OUTPUT
            echo "emoji=‚ùå" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.action }}" == "reopened" ]; then
            echo "status=Ïû¨Ïò§ÌîàÎê®" >> $GITHUB_OUTPUT
            echo "emoji=üîî" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.action }}" == "ready_for_review" ]; then
            echo "status=Î¶¨Î∑∞ Ï§ÄÎπÑ ÏôÑÎ£å" >> $GITHUB_OUTPUT
            echo "emoji=üëÄ" >> $GITHUB_OUTPUT
          else
            echo "status=ÏÉùÏÑ±Îê®" >> $GITHUB_OUTPUT
            echo "emoji=üîî" >> $GITHUB_OUTPUT
          fi

      - name: Slack ÏïåÎ¶º Ï†ÑÏÜ°
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_PR_URL }}
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-Type: application/json' \
          -d '{
            "text": "GitHub Pull Request ${{ steps.pr-status.outputs.status }}",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "${{ steps.pr-status.outputs.emoji }} Pull Request ${{ steps.pr-status.outputs.status }}: #${{ github.event.pull_request.number }}",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Ï†ÄÏû•ÏÜå:*\n${{ github.repository }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*ÏûëÏÑ±Ïûê:*\n${{ github.event.pull_request.user.login }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Î∏åÎûúÏπò:*\n`${{ github.event.pull_request.head.ref }}` ‚Üí `${{ github.event.pull_request.base.ref }}`"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*ÏÉÅÌÉú:*\n${{ steps.pr-status.outputs.status }}"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Ï†úÎ™©:*\n${{ github.event.pull_request.title }}"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "Ïª§Î∞ã: ${{ github.event.pull_request.commits }}Í∞ú | ÌååÏùº Î≥ÄÍ≤Ω: ${{ github.event.pull_request.changed_files }}Í∞ú | +${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}"
                  }
                ]
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "PR Î≥¥Í∏∞"
                    },
                    "url": "${{ github.event.pull_request.html_url }}"
                  }
                ]
              }
            ]
          }'
